#!/bin/bash

function HelpText {
cat <<END
A simple video output controller.
Allows to compose connected outputs in various ways.
Discards LVDS1 (the usual laptop screen output) if the lid is closed.

Usage: monitors <command>

Commands:

  mirror - set a maximum resolution possible on all monitors
           and display the same view on them
  auto   - set all screens to their automatic resolutions, no change
           to the relative positions is made
  clone  - like 'auto' and positions all views to a shared upper left
           corner
  horiz  - like 'auto' and arrange views horizontally
  vert   - like 'auto' and arrange views vertically

END
}

OUTPUT_NAME_CLASS='[A-Z]+\d+'
MODE_CLASS='\d+x\d+'
FULL_OUTPUT_NAME_CLASS=$OUTPUT_NAME_CLASS'(?= (dis)?connected)'
XRANDR_TEXT='/tmp/xrandr-'$USER

function LidIsClosed {
  dbus-send --system --print-reply \
    --dest=org.freedesktop.UPower \
    /org/freedesktop/UPower \
    org.freedesktop.DBus.Properties.Get \
    string:org.freedesktop.UPower string:LidIsClosed | grep -q true
}

function Disconnected {
  grep -Po $OUTPUT_NAME_CLASS'(?= disconnected)' $XRANDR_TEXT
  if LidIsClosed; then
    echo "LVDS1"
  fi
}

function Connected {
  grep -Po $OUTPUT_NAME_CLASS'(?= connected)' $XRANDR_TEXT | if LidIsClosed; then
    grep -v "LVDS1"
  else
    cat
  fi
}

function ModesOf {
  echo $allModes | grep -Po '(?<='"$1"' )(\d+x\d+ )+'
}

function FilterModes {
  modes=$(ModesOf $1)
  while [ -n "$2" ]; do
    modes=$(echo $modes | grep -Po $(ModesOf $2 | tr ' ' '|'))
    shift 1
  done
  echo $modes
}

function BestCommonMode {
  FilterModes $* | cut -d ' ' -f 1
}

function EchoRun {
  echo $*
  $*
  xrandr --dpi 96
  [ -f ~/.fehbg ] && sh ~/.fehbg
}

function ReadState {
  connected=$(Connected)
  disconnected=$(Disconnected)
  all="$connected $disconnected"

  if [ -n "$*" ]; then
    echo $all
    mode=$(echo $* | grep -Po $MODE_CLASS)
    connected=$(for out in $*; do
      echo $out | grep -Pv $MODE_CLASS
    done)

    if [ -z "$connected" ]; then
      connected=$(Connected)
    else
      disconnected=$(for out in $all; do
        echo $out | grep -Pv $(echo $connected | tr ' ' '|')
      done)
    fi
  fi

  first=$(echo $connected | cut -d ' ' -f 1)
  rest=$(echo $connected | cut -d ' ' -f 2-)

  off=$(for out in $disconnected; do echo --output $out --off; done)
}


function Cloned {
  EchoRun xrandr $off \
    --output $first --primary $* \
    $(for out in $rest; do echo --output $out --same-as $first $*; done)
}

function Stack {
  EchoRun xrandr $off \
    --output $first --primary --auto \
    $(for out in $rest; do \
      echo --output $out --auto $1 $first; \
      first=$out; \
    done)
}

cmd=$1
shift

xrandr > $XRANDR_TEXT
allModes=$(grep -Po '(\d+x\d+(?=\s))|'"$FULL_OUTPUT_NAME_CLASS" $XRANDR_TEXT)
ReadState $*

case $cmd in
  auto)
    EchoRun xrandr $off \
      $(for out in $connected; do echo --output $out --auto; done)
  ;;
  clone)
    Cloned --auto
  ;;
  mirror)
    if [ -z "$mode" ]; then
      mode=$(BestCommonMode $connected)
    fi
    Cloned --mode $mode
  ;;
  horiz*)
    Stack --right-of
  ;;
  vert*)
    Stack --above
  ;;
  *)
    HelpText
    echo -e "Current state of the outputs:\n"
    echo "  Connected:   " $connected
    echo "  Disconnected:" $disconnected
    echo
  ;;
esac
